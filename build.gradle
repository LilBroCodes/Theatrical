plugins {
    id 'fabric-loom' version '1.10.2'
    id 'com.modrinth.minotaur' version '2.+'
    id 'maven-publish'
}

version = mod_version
group = maven_group

base {
    archivesName = archives_base_name
}

loom {
    accessWidenerPath = file("src/main/resources/theatrical.accesswidener")
}

repositories {
    mavenCentral()
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
    maven {
        name = "FzzyMaven [Fzzy Config]"
        url = "https://maven.fzzyhmstrs.me/"
    }
    maven {
        name = "Ladysnake [Composer]"
        url = "https://maven.ladysnake.org/releases"
    }
    maven {
        name = "Composer Maven"
        url "https://dl.cloudsmith.io/public/lilbrocodes/composer-reloaded/maven/"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:$minecraft_version"
    mappings "net.fabricmc:yarn:$yarn_mappings:v2"
    modImplementation "net.fabricmc:fabric-loader:$loader_version"

    include modApi("dev.onyxstudios.cardinal-components-api:cardinal-components-base:$cca_version")
    include modApi("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:$cca_version")
    include modApi("dev.onyxstudios.cardinal-components-api:cardinal-components-world:$cca_version")
    modImplementation "net.fabricmc.fabric-api:fabric-api:$fabric_version"
    modImplementation "org.lilbrocodes:composer-reloaded:$composer_version"

    modImplementation "me.fzzyhmstrs:fzzy_config:$fzzy_version+$minecraft_version"

    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    compileOnly("maven.modrinth:simple-voice-chat:fabric-$voicechat")
    compileOnly("maven.modrinth:replaymod:$replaymod")
}

processResources {
    inputs.property "version", version
    inputs.property "minecraft_version", minecraft_version
    inputs.property "loader_version", loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": version,
                "minecraft_version": minecraft_version,
                "loader_version": loader_version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${archives_base_name}" }
    }
}

modrinth {
    projectId = "theatrical-mod"
    uploadFile = remapJar
    versionName = "Theatrical $version"
    gameVersions = [minecraft_version.toString()]
    dependencies {
        required.project "composer-reloaded"
        required.project "cardinal-components-api"
        required.project "fzzy-config"
        optional.project "simple-voice-chat"
        optional.project "replaymod"
    }
}